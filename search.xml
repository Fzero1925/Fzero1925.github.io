<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Java笔记之高并发秒杀API(一)]]></title>
      <url>%2F2017%2F01%2F01%2FJava%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80API-%E4%B8%80%2F</url>
      <content type="text"><![CDATA[本次系列的Java笔记是通过学习慕课网上的高并发秒杀API的视频而总结的，只是想通过写博客的过程能让自己梳理学习的过程，顺便时刻提醒自己。 本次秒杀API的项目的整体框架是Spring+Spring MVC+Mybatis，数据库为MySQL。 创建项目使用maven构建项目，因为使用命令行下载太慢，直接在Eclipse上使用maven来创建项目 如图： archetypeArtifactId: maven-archetype-webapp gtoupId: org.seckill artifactId: seckill 打开src\main\webapp\WEB-INF\web.xml 默认的Servlet版本是2.3，但是该版本下JSP的EL表达式是不工作的，这里需要更改版本 打开apache-tomcat-8.5.9\webapps\examples\WEB-INF\web.xml， 这是Tomcat的示例配置文件，将web-app标签内的内容覆盖到项目中的web.xml的web-app标签 Tomcat8.5.9给的示例文件显示使用的Servlet版本是3.1 依赖配置首先是补全文件，在src/main下添加两个文件夹java、test java： 存放java的源文件 test： 用于单元测试 也可以直接在Eclipse中右键项目名，点击Build Path-&gt;Order and Export 把需要的都选上，然后点击Apply，引入相关文件 接着打开pom.xml，配置依赖首先的改动是junit的版本，Eclipse自动生成的pom.xml的junit版本是3.8.1，这里改为4.11因为junit3.0的版本是默认使用编程的方式运行的， 而4.0的版本是默认通过注解的方式来运行junit的 接着就是补全项目的依赖 日志相关依赖本次项目采用slf4j+logback的组合 123456789101112131415161718&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.12&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-core&lt;/artifactId&gt; &lt;version&gt;1.1.1&lt;/version&gt;&lt;/dependency&gt;&lt;!-- 实现slf4j接口并整合 --&gt;&lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-classic&lt;/artifactId&gt; &lt;version&gt;1.1.1&lt;/version&gt;&lt;/dependency&gt; logback的依赖有两个： logback-core、logback-classic logback-core： 实现logback核心的功能 logback-calssic： 实现slf4j接口并整合 数据库相关依赖包括数据库驱动，数据库连接池c3p0 12345678910111213&lt;!-- 数据库相关依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.35&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;c3p0&lt;/groupId&gt; &lt;artifactId&gt;c3p0&lt;/artifactId&gt; &lt;version&gt;0.9.1.2&lt;/version&gt;&lt;/dependency&gt; DAO框架相关依赖——即Mybatis依赖Mybatis依赖主要有两个，一个是Mybatis自身的依赖，二是Mybatis和Spring整合的依赖 12345678910111213&lt;!-- DAO框架:Mybatis相关依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.3.0&lt;/version&gt;&lt;/dependency&gt;&lt;!-- Mybatis自身实现Spring的整合依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt; &lt;version&gt;1.2.3&lt;/version&gt;&lt;/dependency&gt; Servlet WEB相关依赖一些相关的标签、jstl、jackson等 123456789101112131415161718192021222324&lt;!-- Servlet Web相关依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;taglibs&lt;/groupId&gt; &lt;artifactId&gt;standard&lt;/artifactId&gt; &lt;version&gt;1.1.2&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;jstl&lt;/groupId&gt; &lt;artifactId&gt;jstl&lt;/artifactId&gt; &lt;version&gt;1.2&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt; &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt; &lt;version&gt;2.5.4&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt; &lt;version&gt;3.1.0&lt;/version&gt;&lt;/dependency&gt; Spring相关依赖Spring核心依赖包括spring-beans相关的依赖， 一些spring扩展依赖如:spring-context 123456789101112131415161718&lt;!-- Spring核心依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-core&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-beans&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt; Spring Dao层的依赖 spring-jdbc： jdbc提供数据库相关的事务管理器 spring-tx： Spring的声明式事务 123456789101112&lt;!-- Spring Dao层的依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-tx&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt; Spring WEB相关的依赖包括与Spring MVC相关的依赖 123456789101112&lt;!-- Spring WEB相关的依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt; Spring test相关的依赖123456789101112&lt;!-- Spring WEB相关的依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;4.1.7.RELEASE&lt;/version&gt;&lt;/dependency&gt; 虽然以上有些依赖版本相对有些老旧，但毕竟是练习，在不是特别熟悉这些框架和服务时，尽量按照视频中的版本来。在实际工作中应该前期就把要采用的服务的版本特性了解清楚。 业务分析 秒杀业务的核心就是对库存的处理，而难点主要是竞争 当n个用户同时竞争一个秒杀商品时，为了保证数据准确，没有出现数据的脏读、幻读等；保证商家没有出现超卖或者少卖的现象，就必然会用到事务+行级锁 至此，准备工作完成]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F12%2F30%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
